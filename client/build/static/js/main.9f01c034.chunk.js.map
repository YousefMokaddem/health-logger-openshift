{"version":3,"sources":["components/SignIn.js","components/PrivateRoute.js","components/CreateFood.js","components/Header.js","components/Food.js","components/Foods.js","components/NotFound.js","components/UpdateFood.js","components/SignUp.js","components/CreateDay.js","components/Day.js","components/Days.js","components/AddFood.js","components/SignOut.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","state","message","printErr","_this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","signIn","e","preventDefault","email","target","value","password","headers","Headers","set","Buffer","from","toString","append","fetch","method","then","res","status","json","setState","msg","props","setUser","id","username","styles","theme","textField","marginLeft","spacing","unit","marginRight","width","dense","marginTop","_this2","this","onSubmit","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_7___default","label","className","classNames","style","display","margin","type","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","Component","PrivateRoute","_ref","component","user","rest","Object","objectWithoutProperties","react_default","Route","assign","render","Redirect","CreateFood","solid","checked","data","JSON","stringify","name","calories","fat","carbs","protein","img","isSolid","body","split","history","push","_this3","submitAdd","checkSolid","TextField_default","htmlFor","Checkbox_default","onChange","toggleSolid","defaultChecked","Button_default","Header","checkUser","checkDay","NavLink","exact","color","day","date","root","flexGrow","grow","menuButton","AppBar_default","position","Toolbar_default","Typography_default","variant","Food","reFetch","authorId","Card_default","background","height","CardContent_default","lib_default","src","fallbackImage","alt","onClick","concat","showAuthorButtons","showAddToDayButton","Foods","foods","search","searchedFoods","map","food","i","components_Food","key","User","bind","_this4","length","toLowerCase","_this5","displayFoods","NotFound","UpdateFood","match","params","fetched","submitEdit","parseInt","populateForm","defaultValue","SignUp","register","Content-Type","Link","CreateDay","createDay","Date","toJSON","slice","InputLabelProps","shrink","Day","edit","prevState","item","amount","totalCals","reduce","total","curr","totalFats","totalCarbs","totalProtein","deleteFood","editAmount","triggerEdit","_this6","deleteDay","selectDay","showFoods","Days","days","components_Day","populateDays","AddFood","renderProps","addFood","UserSignOut","signOut","Home","App","undefined","mounted","parse","localStorage","getItem","objectSpread","setItem","storedHeaders","get","BrowserRouter","components_Header","Switch","path","components_Home","components_SignUp","SignOut","components_PrivateRoute","_ref2","components_CreateFood","components_Foods","_ref3","components_UpdateFood","_ref4","components_CreateDay","components_AddFood","_ref5","components_Days","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f01c034.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//material ui compnents\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass SignIn extends Component {\r\n    \r\n    state = {\r\n        message: null\r\n    }\r\n\r\n    printErr = () => {\r\n        if(this.state.message){\r\n            return(\r\n                <p>{this.state.message}</p>\r\n            );\r\n        }\r\n    }\r\n\r\n    signIn = (e) => {\r\n        e.preventDefault();\r\n        const email = e.target[0].value\r\n        const password = e.target[1].value\r\n\r\n        let headers = new Headers();\r\n\r\n        headers.set('Authorization', 'Basic ' + Buffer.from(email + \":\" + password).toString('base64'));\r\n        headers.append('Content-Type', 'application/json');\r\n\r\n        fetch(`/api/users`, {\r\n            method: \"GET\",\r\n            headers: headers\r\n        })\r\n            //if signIn successful, id will be returned from the api\r\n            //we want to store this id in the state of the app so that the user can have permission\r\n            .then(res => {\r\n                if(res.status !== 200){\r\n                    return res.json()\r\n                    .then(res =>\r\n                        this.setState({\r\n                            message: res.message + \" - Invalid email or password\",\r\n                            msg: true\r\n                        })\r\n                    );\r\n                }else{\r\n                    this.setState({\r\n                        message: \"Successfully signed in\",\r\n                        msg: true\r\n                    });\r\n                    res.json()\r\n                        .then(res => {\r\n                            this.props.setUser(email, headers, res.id, res.username);\r\n                        })\r\n                }\r\n            });\r\n    }\r\n\r\n    //material ui vars\r\n    styles = theme => ({\r\n        textField: {\r\n            marginLeft: theme.spacing.unit,\r\n            marginRight: theme.spacing.unit,\r\n            width: 200,\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        }\r\n    });\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={(e) => this.signIn(e)}>\r\n        \r\n                    <h2>Sign In</h2>\r\n                    {this.printErr()}\r\n        \r\n                    <TextField\r\n                    id=\"email\"\r\n                    label=\"email\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                    <TextField\r\n                    id=\"password\"\r\n                    label=\"password\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"password\"/>\r\n                    \r\n                    <Button type=\"submit\">Submit</Button>\r\n                </form>\r\n                <p>Don't have an account? <Link to=\"/signup\">Sign up!</Link></p>\r\n            </div>\r\n\r\n        );\r\n    }    \r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\r\n    return(\r\n        <Route {...rest} render={(props) =>  user !== null ? <Component {...props} {...rest} user={user} /> : <Redirect to={'/'} /> }/>\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import React,{Component} from 'react';\r\n\r\n//material ui compnents\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass CreateFood extends Component {\r\n\r\n    state = {\r\n        solid: true\r\n    }\r\n    \r\n    toggleSolid(e){\r\n        this.setState({solid: e.target.checked});\r\n    }\r\n\r\n    checkSolid(){\r\n        return(this.state.solid? <span>g</span> : <span>ml</span>); \r\n    }\r\n\r\n    printErr = () => {\r\n        if(this.state.message){\r\n            return(\r\n                <p>{this.state.message}</p>\r\n            );\r\n        }\r\n    }\r\n\r\n    submitAdd(e){\r\n        e.preventDefault();\r\n        let data = JSON.stringify({\r\n            name: e.target[0].value,\r\n            calories: e.target[1].value,\r\n            fat: e.target[2].value,\r\n            carbs: e.target[3].value,\r\n            protein: e.target[4].value,\r\n            img: e.target[5].value,\r\n            isSolid: e.target[6].checked\r\n        })\r\n        \r\n        fetch(`/api/foods`, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: this.props.user.headers\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 201){\r\n                    res.json()\r\n                        .then(res => {\r\n                            const message = res.message.split(\"Validation error: \");\r\n                            this.setState({\r\n                                message: message\r\n                            })\r\n                        });\r\n                }else{\r\n                    this.props.history.push('/foods');\r\n                }\r\n            })\r\n        \r\n            \r\n    }\r\n\r\n    //material ui vars\r\n    styles = theme => ({\r\n        textField: {\r\n            marginLeft: theme.spacing.unit,\r\n            marginRight: theme.spacing.unit,\r\n            width: 200,\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        }\r\n    });\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={(e) => this.submitAdd(e)}>\r\n                <p>Please fill in nutritional values based on a serving size of 100 {this.checkSolid()}</p>\r\n                {this.printErr()}\r\n\r\n                <TextField\r\n                    id=\"name\"\r\n                    label=\"name\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                <TextField\r\n                    id=\"calories\"\r\n                    label=\"calories\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                <TextField\r\n                    id=\"fat\"\r\n                    label=\"fat\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                <TextField\r\n                    id=\"carbs\"\r\n                    label=\"carbs\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                <TextField\r\n                    id=\"protein\"\r\n                    label=\"protein\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                <TextField\r\n                    id=\"img-url\"\r\n                    label=\"Image URL\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                <label htmlFor=\"isSolid\">Solid:</label>\r\n                <Checkbox \r\n                    id=\"isSolid\"\r\n                    onChange={(e) => {this.toggleSolid(e)}}\r\n                    defaultChecked\r\n                />\r\n                <br/>\r\n    \r\n                <Button type=\"submit\">Add Food</Button>\r\n                \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateFood;","import React,{Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n//material ui components\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    checkUser = () => {\r\n        if(this.props.user){\r\n            return(\r\n                <nav>\r\n                \r\n                    {this.checkDay()}\r\n                    <NavLink exact to=\"/\"><Button color=\"inherit\">Home</Button></NavLink>\r\n                    <NavLink exact to=\"/foods\"><Button color=\"inherit\">Foods</Button></NavLink>\r\n                    <NavLink to=\"/foods/create\"><Button color=\"inherit\">New Food</Button></NavLink>\r\n                    <NavLink exact to=\"/days\"><Button color=\"inherit\">Days</Button></NavLink>\r\n                    <NavLink to=\"/days/create\"><Button color=\"inherit\">New Day</Button></NavLink>\r\n                    <NavLink to=\"/signout\"><Button color=\"inherit\">Sign Out</Button></NavLink>\r\n                    <h3>{this.props.user.username}</h3>\r\n                </nav>\r\n            );\r\n        }\r\n    }\r\n\r\n    checkDay = () => {\r\n        if(this.props.day){\r\n            return(\r\n                <p>Selected day: {this.props.day.date}</p>\r\n            );\r\n        }\r\n    }\r\n\r\n    //material ui vars\r\n    styles = {\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n        },\r\n    };\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography style={{width: '100%'}} variant=\"h6\" color=\"inherit\">\r\n                            Health Logger\r\n                    \r\n                            {this.checkUser()}\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport ReactImageFallback from 'react-image-fallback';\r\n\r\n//material ui components\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Food = ({name, calories, fat, carbs, protein, img, id, user, reFetch, authorId, day}) => {\r\n\r\n    const deleteFood = () => {\r\n        fetch(`/api/foods/${id}`,{\r\n            method: \"DELETE\",\r\n            headers: user.headers\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200){\r\n                return res.json()\r\n                .then(res =>\r\n                    //print error somewhere\r\n                    1\r\n                )\r\n            }else{\r\n                reFetch();\r\n            }\r\n        });\r\n    }\r\n\r\n    const showAddToDayButton = () => {\r\n        if(day){\r\n            return (<NavLink to={`/days/addfood/${id}`}><Button variant=\"outlined\" color=\"primary\">Add to Day</Button></NavLink>);\r\n        }\r\n    }\r\n    const showAuthorButtons = () => {\r\n        if(user.id === authorId){\r\n            return(\r\n                <div>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => deleteFood()}>Delete</Button>\r\n                    <NavLink to={`/edit/${id}`}><Button variant=\"outlined\">Edit</Button></NavLink>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"food-card\">\r\n            <Card style={{background: '#E8E8E8', height: '100%'}}>\r\n                <CardContent>\r\n                    <ReactImageFallback src={img} fallbackImage=\"https://www.unesale.com/ProductImages/Large/notfound.png\" alt={name}/>\r\n                    <h2 className=\"food-name\">{name}</h2>\r\n                    <p>Calories: {calories}</p>\r\n                    <p>Fat: {fat}</p>\r\n                    <p>Carbohydrates: {carbs}</p>\r\n                    <p>Protein: {protein}</p>\r\n                    {showAuthorButtons()}\r\n                    {showAddToDayButton()}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Food;","import React, {Component} from 'react';\r\nimport Food from './Food';\r\n//material ui components\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Foods extends Component{\r\n\r\n    state={\r\n        foods:[],\r\n        search: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.reFetch();\r\n    }\r\n\r\n    reFetch(){\r\n        fetch('/api/foods')\r\n        .then(res => res.json())\r\n        .then(res => this.setState({foods:res}));\r\n    }\r\n\r\n    displayFoods(){\r\n        if(this.state.search){\r\n            return this.searchedFoods.map((food, i) => {\r\n                return <Food {...food} key={i} user={this.props.user} day={this.props.day} authorId={food.User.id} reFetch={this.reFetch.bind(this)} />\r\n            });\r\n        }else{\r\n            return this.state.foods.map((food, i) => {\r\n                return <Food {...food} key={i} user={this.props.user} day={this.props.day} authorId={food.User.id} reFetch={this.reFetch.bind(this)} />\r\n            });\r\n        }\r\n    }  \r\n\r\n    searchedFoods = [];\r\n\r\n    search(e){\r\n        if(e.target.value.length > 0){\r\n            this.searchedFoods = [];\r\n            this.setState({search: true})\r\n            this.state.foods.map((food, i) => {\r\n                if(food.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1){\r\n                    this.searchedFoods.push(food);\r\n                }\r\n                return 0;\r\n            });\r\n        }else{\r\n            this.setState({search: false});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2 className=\"title\">Foods:</h2>\r\n                <TextField\r\n                    id=\"filled-search\"\r\n                    label=\"Search field\"\r\n                    type=\"search\"\r\n                    margin=\"normal\"\r\n                    variant=\"filled\"\r\n                    onChange={(e) => this.search(e)}\r\n                    />\r\n                <div className=\"food-grid\">\r\n                    {this.displayFoods()}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    \r\n}\r\n\r\nexport default Foods;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return(\r\n        <h2>\r\n            404-Page Not Found!\r\n        </h2>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\n\r\n//material ui compnents\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass UpdateFood extends Component{\r\n    state = {\r\n        id: this.props.match.params.id,\r\n        fetched: false,\r\n        message: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`/api/foods/${this.state.id}`)\r\n        .then(res=>res.json())\r\n        .then(food => {\r\n            this.setState({food:food, fetched:true});\r\n        },);\r\n    }\r\n\r\n    submitEdit = (e) => {\r\n        e.preventDefault();\r\n        let data = JSON.stringify({\r\n            name: e.target[0].value,\r\n            calories: parseInt(e.target[1].value),\r\n            fat: parseInt(e.target[2].value),\r\n            carbs: parseInt(e.target[3].value),\r\n            protein: parseInt(e.target[4].value),\r\n            img: e.target[5].value\r\n        });\r\n        \r\n        fetch(`/api/foods/${this.state.id}`, {\r\n            method: \"PUT\",\r\n            body: data,\r\n            headers: this.props.user.headers\r\n        }).then(res => {\r\n            if(res.status === 204){\r\n                this.props.history.push('/foods');\r\n            }else{\r\n                res.json()\r\n                    .then(res => {\r\n                        const message = res.message.split(\"Validation error: \");\r\n                            this.setState({\r\n                                message: message\r\n                            })\r\n                    });\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    printErr = () => {\r\n        if(this.state.message){\r\n            return(\r\n                <p>{this.state.message}</p>\r\n            );\r\n        }\r\n    }\r\n\r\n    populateForm = (food) => {\r\n        if(this.state.fetched){\r\n            return(\r\n                <form onSubmit={(e) => this.submitEdit(e)} >\r\n                    {this.printErr()}\r\n\r\n\r\n                    <TextField\r\n                        defaultValue={food.name}\r\n                        id=\"name\"\r\n                        label=\"name\"\r\n                        className={classNames(this.styles.textField, this.styles.dense)}\r\n                        style={{display: 'block'}}\r\n                        margin=\"dense\"\r\n                        type=\"text\"/>\r\n\r\n                    <TextField\r\n                        defaultValue={food.calories}\r\n                        id=\"calories\"\r\n                        label=\"calories\"\r\n                        className={classNames(this.styles.textField, this.styles.dense)}\r\n                        style={{display: 'block'}}\r\n                        margin=\"dense\"\r\n                        type=\"text\"/>\r\n\r\n                    <TextField\r\n                        defaultValue={food.fat}\r\n                        id=\"fat\"\r\n                        label=\"fat\"\r\n                        className={classNames(this.styles.textField, this.styles.dense)}\r\n                        style={{display: 'block'}}\r\n                        margin=\"dense\"\r\n                        type=\"text\"/>\r\n\r\n                    <TextField\r\n                        defaultValue={food.carbs}\r\n                        id=\"carbs\"\r\n                        label=\"carbs\"\r\n                        className={classNames(this.styles.textField, this.styles.dense)}\r\n                        style={{display: 'block'}}\r\n                        margin=\"dense\"\r\n                        type=\"text\"/>\r\n\r\n                    <TextField\r\n                        defaultValue={food.protein}\r\n                        id=\"protein\"\r\n                        label=\"protein\"\r\n                        className={classNames(this.styles.textField, this.styles.dense)}\r\n                        style={{display: 'block'}}\r\n                        margin=\"dense\"\r\n                        type=\"text\"/>\r\n\r\n                    <TextField\r\n                        defaultValue={food.img}\r\n                        id=\"img-url\"\r\n                        label=\"Image URL\"\r\n                        className={classNames(this.styles.textField, this.styles.dense)}\r\n                        style={{display: 'block'}}\r\n                        margin=\"dense\"\r\n                        type=\"text\"/>\r\n\r\n                    <label htmlFor=\"isSolid\">Solid:</label>\r\n                    <Checkbox \r\n                        id=\"isSolid\"\r\n                        onChange={(e) => {this.toggleSolid(e)}}\r\n                        defaultChecked={food.isSolid}\r\n                    />\r\n                    <br/>\r\n        \r\n                    <Button type=\"submit\">Submit Changes</Button>\r\n                </form>\r\n            );\r\n        }else{\r\n            return(\r\n                <p>Loading...</p>\r\n            );\r\n        }\r\n    }\r\n\r\n    //material ui vars\r\n    styles = theme => ({\r\n        textField: {\r\n            marginLeft: theme.spacing.unit,\r\n            marginRight: theme.spacing.unit,\r\n            width: 200,\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        }\r\n    });    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {\r\n                    this.populateForm(this.state.food)\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n    \r\n}\r\n\r\nexport default UpdateFood;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//material ui compnents\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        message: null\r\n    }\r\n\r\n    printErr = () => {\r\n        if(this.state.message){\r\n            return(\r\n                <p>{this.state.message}</p>\r\n            );\r\n        }\r\n    }\r\n\r\n    register = (e) => {\r\n        e.preventDefault();\r\n        if(e.target[2].value.length < 6 || e.target[2].value.length > 12){\r\n            this.setState({\r\n                message: \"Password must be between 6 and 12 characters\"\r\n            });\r\n            return;\r\n        }\r\n        if(e.target[2].value !== e.target[3].value){\r\n            this.setState({\r\n                message: \"Passwords must match\"\r\n            });\r\n            return;\r\n        }\r\n        let data = JSON.stringify({\r\n            username: e.target[0].value,\r\n            email: e.target[1].value,\r\n            password: e.target[2].value\r\n        });\r\n\r\n        fetch(`/api/users`, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if(res.status !== 201){\r\n                    return res.json()\r\n                    .then(res => {\r\n                        const message = res.message.split('Validation error: ');\r\n                        this.setState({\r\n                            message: message\r\n                        })\r\n                    }\r\n                    );\r\n                }else{\r\n                    this.setState({\r\n                        message: \"Successfully registered!\"\r\n                    });\r\n                    this.props.history.push('/');\r\n                }\r\n            });\r\n    }\r\n\r\n    //material ui vars\r\n    styles = theme => ({\r\n        textField: {\r\n            marginLeft: theme.spacing.unit,\r\n            marginRight: theme.spacing.unit,\r\n            width: 200,\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        }\r\n    });\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={(e) => this.register(e)}>\r\n                    <h2>Sign Up</h2>\r\n                    {this.printErr()}\r\n\r\n                    <TextField\r\n                    id=\"username\"\r\n                    label=\"username\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                    <TextField\r\n                    id=\"email\"\r\n                    label=\"email\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"text\"/>\r\n\r\n                    <TextField\r\n                    id=\"password\"\r\n                    label=\"password\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"password\"/>\r\n\r\n                    <TextField\r\n                    id=\"confirm-password\"\r\n                    label=\"confirm password\"\r\n                    className={classNames(this.styles.textField, this.styles.dense)}\r\n                    style={{display: 'block'}}\r\n                    margin=\"dense\"\r\n                    type=\"password\"/>\r\n\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </form>\r\n                <p>Already have an account? <Link to=\"/\">Sign in!</Link></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React,{Component} from 'react';\r\n//material ui components\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass CreateDay extends Component {\r\n    state={\r\n        message: null\r\n    }\r\n\r\n    printErr = () => {\r\n        if(this.state.message){\r\n            return(\r\n                <p>{this.state.message}</p>\r\n            );\r\n        }\r\n    }\r\n\r\n    createDay(e){\r\n        e.preventDefault();\r\n\r\n        const data = JSON.stringify({date:e.target[0].value});\r\n        fetch('/api/days',{\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: this.props.user.headers\r\n        }).then(res => {\r\n            if(res.status !== 200){\r\n                return res.json()\r\n                .then(res => {\r\n                    const message = res.message.split(\"Validation error: \");\r\n                    this.setState({\r\n                        message: message\r\n                    })\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    message: \"Successfully created!\"\r\n                });\r\n                this.props.history.push('/days');\r\n            }\r\n        });\r\n    }\r\n\r\n    //material ui vars\r\n    styles = theme => ({\r\n        textField: {\r\n          marginLeft: theme.spacing.unit,\r\n          marginRight: theme.spacing.unit,\r\n          width: 200,\r\n        },\r\n      });\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={(e) => this.createDay(e)}>\r\n                <h2>Create New Day</h2>\r\n                {this.printErr()}\r\n                <br/>\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Date\"\r\n                    type=\"date\"\r\n                    defaultValue={new Date().toJSON().slice(0,10)}\r\n                    className={this.styles.textField}\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <Button type=\"submit\">Submit</Button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateDay;","import React,{Component} from 'react';\r\n\r\n//material ui components\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classNames from 'classnames';\r\n\r\nclass Day extends Component {\r\n    state={\r\n        food:[],\r\n        edit:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.reFetch();\r\n    }\r\n\r\n    deleteFood(id){\r\n        fetch(`/api/foods/${id}`,{\r\n            method: \"DELETE\",\r\n            headers: this.props.user.headers\r\n        })\r\n        .then(res => {\r\n            if(res.status !== 200){\r\n                return res.json()\r\n                .then(res =>\r\n                    //print error somewhere or redirect to server error page\r\n                    1\r\n                )\r\n            }else{\r\n                this.reFetch();\r\n            }\r\n        });\r\n    }\r\n\r\n    triggerEdit(id){\r\n        this.setState(prevState => ({\r\n            edit: (prevState.edit.map((item, i) => (id===i)? true : false))\r\n        }));\r\n    }\r\n    \r\n    editAmount(e, id){\r\n        e.preventDefault();\r\n        const data = JSON.stringify({amount: e.target[0].value});\r\n\r\n        fetch(`/api/foods/${id}`, {\r\n            method: \"PUT\",\r\n            body: data,\r\n            headers: this.props.user.headers\r\n        })\r\n            .then( res => {\r\n                this.setState(prevState => ({\r\n                    edit: (prevState.edit.map(i => false))\r\n                }));\r\n                if(res.status === 204){\r\n                    this.reFetch();\r\n                }\r\n            })\r\n    }\r\n\r\n    reFetch(){\r\n        fetch(`/api/days/${this.props.day.id}`,{headers:this.props.user.headers})\r\n            .then(res => res.json())\r\n            .then(day => {\r\n                this.setState({food:day.Food}, () => {\r\n                    let edit = [];\r\n                    for (let i = 0; i<this.state.food.length; i++){\r\n                        edit.push(false);\r\n                    }\r\n                    this.setState({edit: edit});\r\n                });\r\n            });\r\n    }\r\n\r\n    showFoods(){\r\n        if(this.state.food.length > 0){\r\n            const totalCals = this.state.food.reduce((total, curr)=>{return total + (curr.calories * (curr.amount/100))},0)\r\n            const totalFats = this.state.food.reduce((total, curr)=>{return total + (curr.fat * (curr.amount/100))},0)\r\n            const totalCarbs = this.state.food.reduce((total, curr)=>{return total + (curr.carbs * (curr.amount/100))},0)\r\n            const totalProtein = this.state.food.reduce((total, curr)=>{return total + (curr.protein * (curr.amount/100))},0)\r\n            return(\r\n                <div>\r\n                {this.state.food.map((food, i) => {\r\n                    return(\r\n                        <div key={i}>\r\n                            <p>{food.amount}{food.isSolid? 'g':'ml'} of {food.name} = {food.calories * (food.amount/100)} cals, {food.fat * (food.amount/100)} fat, { \r\n                            food.carbs * (food.amount/100)} carbs, {\r\n                            food.protein * (food.amount/100)} protein</p>\r\n                            <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.deleteFood(food.id)}>Delete</Button>\r\n                            {/* if edit is true, show the form to update amount, else show the edit Button */}\r\n                            {this.state.edit[i] ? \r\n                                <form onSubmit={(e) => this.editAmount(e,food.id)}>\r\n                                    <TextField\r\n                                        id=\"amount\"\r\n                                        defaultValue={food.amount}\r\n                                        label=\"Amount\"\r\n                                        className={classNames(this.styles.textField, this.styles.dense)}\r\n                                        margin=\"dense\"\r\n                                        type=\"text\"/>\r\n                                    <Button type=\"submit\">Submit</Button>\r\n                                </form>\r\n                                : \r\n                                <Button variant=\"outlined\" onClick={() => this.triggerEdit(i)}>Edit</Button>\r\n                            }\r\n                        </div>\r\n                    );\r\n                })}\r\n                \r\n                <p>Total Calories: {totalCals}</p>\r\n                <p>Total Fat: {totalFats}</p>\r\n                <p>Total Carbohydrates: {totalCarbs}</p>\r\n                <p>Total Protein: {totalProtein}</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    //material ui vars\r\n    styles = theme => ({\r\n        textField: {\r\n            marginLeft: theme.spacing.unit,\r\n            marginRight: theme.spacing.unit,\r\n            width: 200,\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        }\r\n    }); \r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"day-card\">\r\n                <Card style={{background: '#E8E8E8', height: '100%'}}>\r\n                    <CardContent>\r\n                        <h2>{this.props.day.date}</h2>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.deleteDay(this.props.day)}>Delete Day</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.props.selectDay(this.props.day)}>Select Day</Button>\r\n                        {this.showFoods()}\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Day;","import React,{Component} from 'react';\r\nimport Day from './Day';\r\n\r\nclass Days extends Component {\r\n    state={\r\n        days:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.reFetch();\r\n    }\r\n\r\n    populateDays(){\r\n        return(\r\n            this.state.days.map((day) => {\r\n                return(\r\n                    <Day key={day.id} deleteDay={this.deleteDay.bind(this)} selectDay={this.selectDay.bind(this)} user={this.props.user} day={day}/>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    selectDay(day){\r\n        this.props.selectDay(day);\r\n        this.props.history.push('/foods');\r\n    }\r\n\r\n    deleteDay(day){\r\n        fetch(`/api/days/${day.id}`, {\r\n            method: \"DELETE\",\r\n            headers: this.props.user.headers\r\n        }).then(res => {\r\n            if(res.status === 200){\r\n                this.reFetch();\r\n            }\r\n        })\r\n    }\r\n\r\n    reFetch(){\r\n        fetch('/api/days',{headers:this.props.user.headers})\r\n            .then(res => {\r\n                if(res.status === 200){\r\n                    res.json()\r\n                    .then(days => this.setState({days}));\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>  \r\n                <h2>Days:</h2>\r\n                <div className=\"day-grid\">\r\n                    {this.populateDays()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Days;","import React,{Component} from 'react';\r\n\r\n//material ui compnents\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass AddFood extends Component {\r\n    \r\n    addFood(e){\r\n        e.preventDefault();\r\n        const data = JSON.stringify({amount: parseInt(e.target[0].value)});\r\n\r\n        fetch(`/api/days/${this.props.day.id}-${this.props.renderProps.match.params.id}`, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: this.props.user.headers\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200){\r\n                    this.props.renderProps.history.push('/foods');\r\n                }\r\n            })\r\n    }\r\n\r\n    //material ui vars\r\n    styles = theme => ({\r\n        textField: {\r\n            marginLeft: theme.spacing.unit,\r\n            marginRight: theme.spacing.unit,\r\n            width: 200,\r\n        },\r\n        dense: {\r\n            marginTop: 19,\r\n        }\r\n    }); \r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={(e) => this.addFood(e)}>\r\n                <TextField\r\n                        id=\"amount\"\r\n                        label=\"Amount\"\r\n                        className={classNames(this.styles.textField, this.styles.dense)}\r\n                        style={{display: 'block'}}\r\n                        margin=\"dense\"\r\n                        type=\"text\"/>\r\n                <Button type=\"submit\">Submit</Button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFood;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nconst UserSignOut = ({signOut}) => {\r\n    signOut();\r\n    return(\r\n        <Redirect to=\"/\"/>\r\n    );\r\n}\r\n\r\nexport default UserSignOut;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div>\r\n            <h2>How to use Health Logger:</h2>\r\n            <ol>\r\n                <li>Create a day using the NEW DAY page</li>\r\n                <li>Select a day to add foods to from the DAYS page</li>\r\n                <li>Select foods to add to your selected day from the FOODS page (displayed nutrition values are per 100 grams or milliliters)</li>\r\n                <li>Add your own foods using the NEW FOOD page</li>\r\n                <li>You may delete or modify foods that you have added on the FOODS page</li>\r\n                <li>You may delete or modify the quantity of foods from your days on the DAYS page</li>\r\n                <li>You may delete an entire day on the DAYS page</li>\r\n            </ol>\r\n            <p>NOTE: This site is a work in progress, and has yet to be optimized for mobile users. Thank you for your time.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport CreateFood from './components/CreateFood';\nimport Header from './components/Header';\nimport Foods from './components/Foods';\nimport NotFound from './components/NotFound';\nimport UpdateFood from './components/UpdateFood';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport CreateDay from './components/CreateDay';\nimport Days from './components/Days';\nimport AddFood from './components/AddFood';\nimport SignOut from './components/SignOut';\nimport Home from './components/Home';\n\n\nclass App extends Component {\n  state = {\n    user: undefined,\n    day: undefined\n  }\n  mounted = false;\n  componentDidMount(){\n    this.mounted = true;\n    if(JSON.parse(localStorage.getItem('user'))){\n      this.setState({\n        user: { \n          ...JSON.parse(localStorage.getItem('user')),\n          headers: JSON.parse(localStorage.getItem('headers'))\n        }\n      });\n    }else{\n      this.setState({user:null});\n    }\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  signOut(){\n    this.setState({\n      user: null,\n      day: undefined\n    }, () => {\n      localStorage.setItem('user',null);\n      localStorage.setItem('headers',null);\n    });\n  }\n\n  //store user in state after sign in\n  setUser(email, headers, id, username){\n    this.setState({\n      user:{\n        email,headers,id,username\n      }\n    }, () => { //set local storage user\n      localStorage.setItem('user', JSON.stringify(this.state.user));\n      let storedHeaders = [];\n      storedHeaders.push([\"authorization\", headers.get('Authorization')]);\n      storedHeaders.push([\"content-type\", headers.get('Content-Type')]);\n      localStorage.setItem('headers', JSON.stringify(storedHeaders));\n    });\n  }\n  //add day to state after selected\n  selectDay(day){\n    this.setState({day:{...day}});\n  }\n\n  render() {\n    if(!this.mounted)return(<div></div>);\n    return (\n      <BrowserRouter>\n        <div>\n          <Header day={this.state.day} user={this.state.user}/>\n          <div className=\"app-container\">\n            <Switch >\n              {/* display login screen if not logged in and user info if logged in. */}\n              <Route exact path=\"/\" render={() => this.state.user? <Home /> : <SignIn setUser={this.setUser.bind(this)}/>} />\n              <Route path=\"/signup\" render={({history}) => <SignUp history={history} />} />\n              <Route path=\"/signout\" render={() => <SignOut signOut={this.signOut.bind(this)} />} />\n              <PrivateRoute user={this.state.user} path=\"/foods/create\" component={({history}) => <CreateFood user={this.state.user} history={history} />} />\n              <PrivateRoute user={this.state.user} path=\"/foods\" component={() => <Foods user={this.state.user} day={this.state.day} foods={this.state.foods} />} />\n              <PrivateRoute user={this.state.user} path=\"/edit/:id\" component={({match,history}) => <UpdateFood user={this.state.user} match={match} history={history} />} />\n              <PrivateRoute user={this.state.user} path=\"/days/create\" component={({history}) => <CreateDay history={history} user={this.state.user} />}/>\n              <PrivateRoute user={this.state.user} path=\"/days/addfood/:id\" component={(props) => <AddFood renderProps={props} day={this.state.day} user={this.state.user} />}/>\n              <PrivateRoute user={this.state.user} path=\"/days\" component={({history}) => <Days day={this.state.day} history={history} selectDay={this.selectDay.bind(this)} user={this.state.user} />} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}